
/* Frontend complet une application de recherche emploi avec React, Tailwind CSS et intégration à FastAPI backend
*/ Structure générale : Authentification, Dashboard, Recherche, Postulation, IA, Profil

// Fichier : src/main.jsx
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import './index.css';

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// Fichier : src/App.jsx
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Home from './pages/Home';
import Login from './pages/Login';
import Register from './pages/Register';
import Dashboard from './pages/Dashboard';
import Profile from './pages/Profile';

const App = () => {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/login" element={<Login />} />
        <Route path="/register" element={<Register />} />
        <Route path="/dashboard" element={<Dashboard />} />
        <Route path="/profile" element={<Profile />} />
      </Routes>
    </Router>
  );
};

export default App;

// Fichier : src/pages/Home.jsx
import React from 'react';
import { Link } from 'react-router-dom';

const Home = () => (
  <div className="flex flex-col items-center justify-center h-screen bg-gradient-to-r from-blue-400 to-indigo-600 text-white">
    <h1 className="text-5xl font-bold mb-6">Bienvenue sur SmartJob</h1>
    <p className="mb-6 text-lg">Trouvez et postulez automatiquement à des offres emplois avec assistance IA</p>
    <div>
      <Link to="/login" className="bg-white text-blue-600 px-6 py-2 rounded-xl font-semibold shadow-md hover:bg-gray-100 mr-4">Se connecter</Link>
      <Link to="/register" className="bg-transparent border border-white px-6 py-2 rounded-xl hover:bg-white hover:text-blue-600">Créer un compte</Link>
    </div>
  </div>
);

export default Home;

// Fichier : src/pages/Login.jsx
import React, { useState } from 'react';

const Login = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async (e) => {
    e.preventDefault();
    // Envoi des données au backend
    try {
      const response = await fetch("https://votre-backend/render/api/login", {
        method: "POST",
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, password })
      });
      const data = await response.json();
      console.log(data);
      if (data.access_token) {
        localStorage.setItem("token", data.access_token);
        window.location.href = "/dashboard";
      }
    } catch (err) {
      console.error("Erreur lors de la connexion :", err);
    }
  };

  return (
    <div className="flex items-center justify-center h-screen bg-gray-100">
      <form onSubmit={handleLogin} className="bg-white p-8 rounded-xl shadow-md w-96">
        <h2 className="text-2xl font-bold mb-4 text-center">Connexion</h2>
        <input
          type="email"
          placeholder="Email"
          className="w-full mb-4 p-2 border rounded"
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <input
          type="password"
          placeholder="Mot de passe"
          className="w-full mb-4 p-2 border rounded"
          onChange={(e) => setPassword(e.target.value)}
          required
        />
        <button className="w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600">Se connecter</button>
      </form>
    </div>
  );
};

export default Login;

// Fichier : src/pages/Register.jsx (identique à Login avec champs supplémentaires)

// Fichier : src/pages/Dashboard.jsx
import React, { useEffect, useState } from 'react';

const Dashboard = () => {
  const [jobs, setJobs] = useState([]);

  useEffect(() => {
    const fetchJobs = async () => {
      try {
        const res = await fetch("https://votre-backend/render/api/jobs", {
          headers: { 'Authorization': `Bearer ${localStorage.getItem("token")}` }
        });
        const data = await res.json();
        setJobs(data);
      } catch (err) {
        console.error("Erreur récupération jobs :", err);
      }
    };
    fetchJobs();
  }, []);

  return (
    <div className="p-6">
      <h1 className="text-3xl font-bold mb-4">Tableau de bord</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {jobs.map((job, index) => (
          <div key={index} className="p-4 bg-white rounded-xl shadow">
            <h2 className="text-xl font-semibold mb-2">{job.title}</h2>
            <p className="text-gray-600 mb-2">{job.company}</p>
            <p className="text-sm text-gray-500">{job.location}</p>
            <button className="mt-4 px-4 py-2 bg-indigo-500 text-white rounded hover:bg-indigo-600">Postuler</button>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Dashboard;
